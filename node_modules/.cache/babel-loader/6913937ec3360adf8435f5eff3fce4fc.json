{"ast":null,"code":"var _jsxFileName = \"/Users/rupert/Documents/Job Applications/RupertWebDev/Code Tests/Hambly Freeman/Resources/txo-front-end/src/features/sentence-builder/sentence-builder.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MainLayout } from \"components/layout/main-layout\";\nimport randomSentenceStyles from \"./styles/_random-sentence.module.scss\";\nimport startStyles from \"./styles/_start.module.scss\";\nimport { SquareButton } from \"components/ui/buttons/square-button\";\nimport { buildRandomSentence } from \"./core-functions/build-random-sentence\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SentenceBuilder() {\n  _s();\n\n  const [generateRandomSentence, setGenerateRandomSentence] = useState(false);\n  const settings = {\n    negative: true,\n    tenses: {\n      past: true,\n      present: true,\n      future: true\n    },\n    politeJapanese: true,\n    includedLevels: {\n      easy: true,\n      medium: true,\n      hard: true\n    },\n    japaneseCharacters: {\n      kanji: true,\n      hirigana: true\n    },\n    startingLanguage: \"english\"\n  }; // Detect spacebar event\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", detectKeyDown, true);\n  }, []);\n\n  function detectKeyDown(event) {\n    if (event.key === \" \") {\n      console.log(\"jey\");\n    }\n  }\n\n  const [randomSentence, setRandomSentence] = useState({\n    english: \"\",\n    japanese: \"\"\n  });\n\n  function buildSentence() {\n    const newSentence = buildRandomSentence(settings);\n    setRandomSentence(newSentence);\n  }\n\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: generateRandomSentence ? /*#__PURE__*/_jsxDEV(RandomSentence, {\n      buildSentence: buildSentence,\n      randomSentence: randomSentence\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Start, {\n      buildSentence: buildSentence,\n      setGenerateRandomSentence: setGenerateRandomSentence\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SentenceBuilder, \"vOcdFxmPQipG3Pt6zLdhmgjq9Z0=\");\n\n_c = SentenceBuilder;\n\nfunction Start(_ref) {\n  let {\n    setGenerateRandomSentence,\n    buildSentence\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: startStyles[\"start-wrapper\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: startStyles[\"start-text\"],\n      children: \"Click the button below to begin!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SquareButton, {\n      onClickButton: () => {\n        setGenerateRandomSentence(true);\n        buildSentence();\n      },\n      text: \"Generate random sentence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Start;\n\nfunction RandomSentence(_ref2) {\n  _s2();\n\n  let {\n    buildSentence,\n    randomSentence\n  } = _ref2;\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  const handleNextSentence = () => {\n    buildSentence();\n    setShowAnswer(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: randomSentenceStyles[\"random-sentence-wrapper\"],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: randomSentenceStyles[\"question-answer-text-wrapper\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: randomSentence.english\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${!showAnswer ? randomSentenceStyles[\"hide\"] : \"\"}`,\n        children: randomSentence.japanese\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: randomSentenceStyles[\"button-wrapper\"],\n      children: [/*#__PURE__*/_jsxDEV(SquareButton, {\n        onClickButton: () => {\n          setShowAnswer(true);\n        },\n        disabled: showAnswer,\n        text: \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SquareButton, {\n        onClickButton: () => {\n          handleNextSentence();\n        },\n        text: \"Next sentence\",\n        buttonStyle: \"outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(RandomSentence, \"/brvs1xZF/PooFi4VTtMp3zSWWA=\");\n\n_c3 = RandomSentence;\nexport { SentenceBuilder };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SentenceBuilder\");\n$RefreshReg$(_c2, \"Start\");\n$RefreshReg$(_c3, \"RandomSentence\");","map":{"version":3,"names":["React","useState","useEffect","MainLayout","randomSentenceStyles","startStyles","SquareButton","buildRandomSentence","SentenceBuilder","generateRandomSentence","setGenerateRandomSentence","settings","negative","tenses","past","present","future","politeJapanese","includedLevels","easy","medium","hard","japaneseCharacters","kanji","hirigana","startingLanguage","document","addEventListener","detectKeyDown","event","key","console","log","randomSentence","setRandomSentence","english","japanese","buildSentence","newSentence","Start","RandomSentence","showAnswer","setShowAnswer","handleNextSentence"],"sources":["/Users/rupert/Documents/Job Applications/RupertWebDev/Code Tests/Hambly Freeman/Resources/txo-front-end/src/features/sentence-builder/sentence-builder.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { MainLayout } from \"components/layout/main-layout\";\nimport randomSentenceStyles from \"./styles/_random-sentence.module.scss\";\nimport startStyles from \"./styles/_start.module.scss\";\nimport { SquareButton } from \"components/ui/buttons/square-button\";\nimport { buildRandomSentence } from \"./core-functions/build-random-sentence\";\n\nfunction SentenceBuilder() {\n  const [generateRandomSentence, setGenerateRandomSentence] = useState(false);\n\n  const settings = {\n    negative: true,\n    tenses: { past: true, present: true, future: true },\n    politeJapanese: true,\n    includedLevels: { easy: true, medium: true, hard: true },\n    japaneseCharacters: { kanji: true, hirigana: true },\n    startingLanguage: \"english\",\n  };\n\n  // Detect spacebar event\n  useEffect(() => {\n    document.addEventListener(\"keydown\", detectKeyDown, true);\n  }, []);\n\n  function detectKeyDown(event: KeyboardEvent) {\n    if (event.key === \" \") {\n      console.log(\"jey\");\n    }\n  }\n\n  const [randomSentence, setRandomSentence] = useState({\n    english: \"\",\n    japanese: \"\",\n  });\n\n  function buildSentence() {\n    const newSentence = buildRandomSentence(settings);\n    setRandomSentence(newSentence);\n  }\n\n  return (\n    <MainLayout>\n      {generateRandomSentence ? (\n        <RandomSentence\n          buildSentence={buildSentence}\n          randomSentence={randomSentence}\n        />\n      ) : (\n        <Start\n          buildSentence={buildSentence}\n          setGenerateRandomSentence={setGenerateRandomSentence}\n        />\n      )}\n    </MainLayout>\n  );\n}\n\ntype StartProps = {\n  buildSentence: Function;\n  setGenerateRandomSentence: Function;\n};\n\nfunction Start({ setGenerateRandomSentence, buildSentence }: StartProps) {\n  return (\n    <div className={startStyles[\"start-wrapper\"]}>\n      <div className={startStyles[\"start-text\"]}>\n        Click the button below to begin!\n      </div>\n      <SquareButton\n        onClickButton={() => {\n          setGenerateRandomSentence(true);\n          buildSentence();\n        }}\n        text=\"Generate random sentence\"\n      />\n    </div>\n  );\n}\n\ntype RandomSentenceProps = {\n  buildSentence: Function;\n  randomSentence: { english: string; japanese: string };\n};\n\nfunction RandomSentence({\n  buildSentence,\n  randomSentence,\n}: RandomSentenceProps) {\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  const handleNextSentence = () => {\n    buildSentence();\n    setShowAnswer(false);\n  };\n\n  return (\n    <div className={randomSentenceStyles[\"random-sentence-wrapper\"]}>\n      <div className={randomSentenceStyles[\"question-answer-text-wrapper\"]}>\n        <div>{randomSentence.english}</div>\n        <div className={`${!showAnswer ? randomSentenceStyles[\"hide\"] : \"\"}`}>\n          {randomSentence.japanese}\n        </div>\n      </div>\n\n      <div className={randomSentenceStyles[\"button-wrapper\"]}>\n        <SquareButton\n          onClickButton={() => {\n            setShowAnswer(true);\n          }}\n          disabled={showAnswer}\n          text=\"Answer\"\n        />\n        <SquareButton\n          onClickButton={() => {\n            handleNextSentence();\n          }}\n          text=\"Next sentence\"\n          buttonStyle={\"outline\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport { SentenceBuilder };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}