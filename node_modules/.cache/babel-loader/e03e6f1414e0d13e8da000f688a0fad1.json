{"ast":null,"code":"export const pickRandomArrayValue = array => {\n  return array[Math.floor(Math.random() * array.length)];\n};\nexport function randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\nexport function checkConditions(tests) {\n  let allTestsPassed = true;\n  tests.forEach(testFailed => {\n    if (testFailed) {\n      allTestsPassed = false;\n    }\n  });\n  return allTestsPassed;\n}","map":{"version":3,"names":["pickRandomArrayValue","array","Math","floor","random","length","randomIntFromInterval","min","max","checkConditions","tests","allTestsPassed","forEach","testFailed"],"sources":["/Users/rupert/Documents/Job Applications/RupertWebDev/Code Tests/Hambly Freeman/Resources/txo-front-end/src/features/sentence-builder/core-functions/helpers/helpers.js"],"sourcesContent":["export const pickRandomArrayValue = (array) => {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\nexport function randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function checkConditions(tests) {\n  let allTestsPassed = true;\n\n  tests.forEach((testFailed) => {\n    if (testFailed) {\n      allTestsPassed = false;\n    }\n  });\n\n  return allTestsPassed;\n}\n"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAIC,KAAD,IAAW;EAC7C,OAAOA,KAAK,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,KAAK,CAACI,MAAjC,CAAD,CAAZ;AACD,CAFM;AAIP,OAAO,SAASC,qBAAT,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyC;EAC9C,OAAON,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBI,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD;AAED,OAAO,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;EACrC,IAAIC,cAAc,GAAG,IAArB;EAEAD,KAAK,CAACE,OAAN,CAAeC,UAAD,IAAgB;IAC5B,IAAIA,UAAJ,EAAgB;MACdF,cAAc,GAAG,KAAjB;IACD;EACF,CAJD;EAMA,OAAOA,cAAP;AACD"},"metadata":{},"sourceType":"module"}