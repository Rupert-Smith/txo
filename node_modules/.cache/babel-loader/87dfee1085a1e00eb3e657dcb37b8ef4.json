{"ast":null,"code":"import { pickRandomArrayValue } from \"features/sentence-builder/core-functions/helpers/helpers\";\nimport { VERBS } from \"vocab-store/verbs\";\nimport { NOUNS } from \"vocab-store/nouns\";\nimport { checkConditions } from \"features/sentence-builder/core-functions/helpers/helpers\";\nexport function futureSimple(settings) {\n  let verb;\n  let subject;\n  let object;\n  let conditionsMet = false;\n\n  while (!conditionsMet) {\n    let updatedVerb = pickRandomArrayValue(VERBS);\n    let updatedSubject = pickRandomArrayValue(NOUNS);\n    let updatedObject = pickRandomArrayValue(NOUNS);\n    const tests = [!updatedVerb.permitsObject, !updatedSubject.animate && !updatedVerb.permitSubjectAsInaninate];\n    conditionsMet = checkConditions(tests);\n\n    if (conditionsMet) {\n      verb = updatedVerb;\n      subject = updatedSubject;\n      object = updatedObject;\n    }\n  }\n\n  let englishText = `The ${subject.english} ${verb.englishConjugation.simpleFuture} the ${object.english}`;\n  let JapaneseText = `${subject.hirigana}が${object.hirigana}を${verb.hirigana} `;\n  return {\n    english: englishText,\n    japanese: JapaneseText\n  };\n}","map":{"version":3,"names":["pickRandomArrayValue","VERBS","NOUNS","checkConditions","futureSimple","settings","verb","subject","object","conditionsMet","updatedVerb","updatedSubject","updatedObject","tests","permitsObject","animate","permitSubjectAsInaninate","englishText","english","englishConjugation","simpleFuture","JapaneseText","hirigana","japanese"],"sources":["/Users/rupert/Documents/Job Applications/RupertWebDev/Code Tests/Hambly Freeman/Resources/txo-front-end/src/features/sentence-builder/core-functions/sentence-builders/subject-verb-object/future-simple.js"],"sourcesContent":["import { pickRandomArrayValue } from \"features/sentence-builder/core-functions/helpers/helpers\";\nimport { VERBS } from \"vocab-store/verbs\";\nimport { NOUNS } from \"vocab-store/nouns\";\nimport { checkConditions } from \"features/sentence-builder/core-functions/helpers/helpers\";\n\nexport function futureSimple(settings) {\n  let verb;\n  let subject;\n  let object;\n  let conditionsMet = false;\n\n  while (!conditionsMet) {\n    let updatedVerb = pickRandomArrayValue(VERBS);\n    let updatedSubject = pickRandomArrayValue(NOUNS);\n    let updatedObject = pickRandomArrayValue(NOUNS);\n\n    const tests = [\n      !updatedVerb.permitsObject,\n      !updatedSubject.animate && !updatedVerb.permitSubjectAsInaninate,\n    ];\n\n    conditionsMet = checkConditions(tests);\n\n    if (conditionsMet) {\n      verb = updatedVerb;\n      subject = updatedSubject;\n      object = updatedObject;\n    }\n  }\n\n  let englishText = `The ${subject.english} ${verb.englishConjugation.simpleFuture} the ${object.english}`;\n  let JapaneseText = `${subject.hirigana}が${object.hirigana}を${verb.hirigana} `;\n\n  return { english: englishText, japanese: JapaneseText };\n}\n"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,0DAArC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,eAAT,QAAgC,0DAAhC;AAEA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;EACrC,IAAIC,IAAJ;EACA,IAAIC,OAAJ;EACA,IAAIC,MAAJ;EACA,IAAIC,aAAa,GAAG,KAApB;;EAEA,OAAO,CAACA,aAAR,EAAuB;IACrB,IAAIC,WAAW,GAAGV,oBAAoB,CAACC,KAAD,CAAtC;IACA,IAAIU,cAAc,GAAGX,oBAAoB,CAACE,KAAD,CAAzC;IACA,IAAIU,aAAa,GAAGZ,oBAAoB,CAACE,KAAD,CAAxC;IAEA,MAAMW,KAAK,GAAG,CACZ,CAACH,WAAW,CAACI,aADD,EAEZ,CAACH,cAAc,CAACI,OAAhB,IAA2B,CAACL,WAAW,CAACM,wBAF5B,CAAd;IAKAP,aAAa,GAAGN,eAAe,CAACU,KAAD,CAA/B;;IAEA,IAAIJ,aAAJ,EAAmB;MACjBH,IAAI,GAAGI,WAAP;MACAH,OAAO,GAAGI,cAAV;MACAH,MAAM,GAAGI,aAAT;IACD;EACF;;EAED,IAAIK,WAAW,GAAI,OAAMV,OAAO,CAACW,OAAQ,IAAGZ,IAAI,CAACa,kBAAL,CAAwBC,YAAa,QAAOZ,MAAM,CAACU,OAAQ,EAAvG;EACA,IAAIG,YAAY,GAAI,GAAEd,OAAO,CAACe,QAAS,IAAGd,MAAM,CAACc,QAAS,IAAGhB,IAAI,CAACgB,QAAS,GAA3E;EAEA,OAAO;IAAEJ,OAAO,EAAED,WAAX;IAAwBM,QAAQ,EAAEF;EAAlC,CAAP;AACD"},"metadata":{},"sourceType":"module"}