{"ast":null,"code":"import { pickRandomArrayValue } from \"features/sentence-builder/core-functions/helpers/helpers\";\nimport { checkConditions } from \"features/sentence-builder/core-functions/helpers/helpers\";\nimport { VERBS } from \"vocab-store/verbs\";\nimport { NOUNS } from \"vocab-store/nouns\";\nexport function futureSimple(settings) {\n  let verb;\n  let noun;\n  let conditionsMet = false;\n\n  while (!conditionsMet) {\n    let updatedVerb = pickRandomArrayValue(VERBS);\n    let updatedNoun = pickRandomArrayValue(NOUNS);\n    const tests = [updatedVerb.requiresObject, !updatedNoun.animate && !updatedVerb.permitSubjectAsInaninate];\n    conditionsMet = checkConditions(tests);\n\n    if (conditionsMet) {\n      verb = updatedVerb;\n      noun = updatedNoun;\n    }\n  }\n\n  return determineSentenceStructure({\n    words: verb,\n    noun\n  }, settings);\n}\n\nfunction determineSentenceStructure(words, settings) {\n  // const settings = {\n  //   negative: true,\n  //   tenses: { past: true, present: true, future: true },\n  //   politeJapanese: true,\n  //   includedLevels: { easy: true, medium: true, hard: true },\n  //   japaneseCharacters: { kanji: true, hirigana: true },\n  //   startingLanguage: \"english\",\n  // };\n  // the bird will go\n  //とり　が　いく\n  let englishText = `The ${words.noun.english} ${words.verb.englishConjugation.simpleFuture}`;\n  let JapaneseText = `${words.noun.hirigana}が${words.verb.hirigana}`;\n  return {\n    english: englishText,\n    japanese: JapaneseText\n  };\n}","map":{"version":3,"names":["pickRandomArrayValue","checkConditions","VERBS","NOUNS","futureSimple","settings","verb","noun","conditionsMet","updatedVerb","updatedNoun","tests","requiresObject","animate","permitSubjectAsInaninate","determineSentenceStructure","words","englishText","english","englishConjugation","simpleFuture","JapaneseText","hirigana","japanese"],"sources":["/Users/rupert/Documents/Job Applications/RupertWebDev/Code Tests/Hambly Freeman/Resources/txo-front-end/src/features/sentence-builder/core-functions/sentence-builders/subject-verb/future-simple.js"],"sourcesContent":["import { pickRandomArrayValue } from \"features/sentence-builder/core-functions/helpers/helpers\";\nimport { checkConditions } from \"features/sentence-builder/core-functions/helpers/helpers\";\nimport { VERBS } from \"vocab-store/verbs\";\nimport { NOUNS } from \"vocab-store/nouns\";\n\nexport function futureSimple(settings) {\n  let verb;\n  let noun;\n  let conditionsMet = false;\n  while (!conditionsMet) {\n    let updatedVerb = pickRandomArrayValue(VERBS);\n    let updatedNoun = pickRandomArrayValue(NOUNS);\n    const tests = [\n      updatedVerb.requiresObject,\n      !updatedNoun.animate && !updatedVerb.permitSubjectAsInaninate,\n    ];\n    conditionsMet = checkConditions(tests);\n    if (conditionsMet) {\n      verb = updatedVerb;\n      noun = updatedNoun;\n    }\n  }\n\n  return determineSentenceStructure({ words: verb, noun }, settings);\n}\n\nfunction determineSentenceStructure(words, settings) {\n  // const settings = {\n  //   negative: true,\n  //   tenses: { past: true, present: true, future: true },\n  //   politeJapanese: true,\n  //   includedLevels: { easy: true, medium: true, hard: true },\n  //   japaneseCharacters: { kanji: true, hirigana: true },\n  //   startingLanguage: \"english\",\n  // };\n\n  // the bird will go\n  //とり　が　いく\n\n  let englishText = `The ${words.noun.english} ${words.verb.englishConjugation.simpleFuture}`;\n  let JapaneseText = `${words.noun.hirigana}が${words.verb.hirigana}`;\n\n  return { english: englishText, japanese: JapaneseText };\n}\n"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,0DAArC;AACA,SAASC,eAAT,QAAgC,0DAAhC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;EACrC,IAAIC,IAAJ;EACA,IAAIC,IAAJ;EACA,IAAIC,aAAa,GAAG,KAApB;;EACA,OAAO,CAACA,aAAR,EAAuB;IACrB,IAAIC,WAAW,GAAGT,oBAAoB,CAACE,KAAD,CAAtC;IACA,IAAIQ,WAAW,GAAGV,oBAAoB,CAACG,KAAD,CAAtC;IACA,MAAMQ,KAAK,GAAG,CACZF,WAAW,CAACG,cADA,EAEZ,CAACF,WAAW,CAACG,OAAb,IAAwB,CAACJ,WAAW,CAACK,wBAFzB,CAAd;IAIAN,aAAa,GAAGP,eAAe,CAACU,KAAD,CAA/B;;IACA,IAAIH,aAAJ,EAAmB;MACjBF,IAAI,GAAGG,WAAP;MACAF,IAAI,GAAGG,WAAP;IACD;EACF;;EAED,OAAOK,0BAA0B,CAAC;IAAEC,KAAK,EAAEV,IAAT;IAAeC;EAAf,CAAD,EAAwBF,QAAxB,CAAjC;AACD;;AAED,SAASU,0BAAT,CAAoCC,KAApC,EAA2CX,QAA3C,EAAqD;EACnD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA,IAAIY,WAAW,GAAI,OAAMD,KAAK,CAACT,IAAN,CAAWW,OAAQ,IAAGF,KAAK,CAACV,IAAN,CAAWa,kBAAX,CAA8BC,YAAa,EAA1F;EACA,IAAIC,YAAY,GAAI,GAAEL,KAAK,CAACT,IAAN,CAAWe,QAAS,IAAGN,KAAK,CAACV,IAAN,CAAWgB,QAAS,EAAjE;EAEA,OAAO;IAAEJ,OAAO,EAAED,WAAX;IAAwBM,QAAQ,EAAEF;EAAlC,CAAP;AACD"},"metadata":{},"sourceType":"module"}